<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iidooo.core.mapper.SecurityRoleMapper">
	<resultMap id="BaseResultMap" type="com.iidooo.core.model.po.SecurityRole">
		<id column="RoleID" property="roleID" jdbcType="INTEGER" />
		<result column="RoleCode" property="roleCode" jdbcType="VARCHAR" />
		<result column="RoleName" property="roleName" jdbcType="VARCHAR" />
		<result column="Remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="UpdateUserID" property="updateUserID" jdbcType="INTEGER" />
		<result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="CreateUserID" property="createUserID" jdbcType="INTEGER" />
		<result column="IsDelete" property="isDelete" jdbcType="INTEGER" />
		<result column="Version" property="version" jdbcType="INTEGER" />
		<collection select="selectResList" column="roleID" property="resourceList" ofType="com.iidooo.core.model.po.SecurityResource"></collection>
	</resultMap>
	<sql id="Base_Column_List">
		R.RoleID, R.RoleCode, R.RoleName, R.Remarks, R.UpdateTime, R.UpdateUserID, R.CreateTime, R.CreateUserID,
		R.IsDelete, R.Version
	</sql>

	<resultMap id="ResResultMap" type="com.iidooo.core.model.po.SecurityResource">
		<id column="ResID" property="resID" jdbcType="INTEGER" />
		<result column="ParentID" property="parentID" jdbcType="INTEGER" />
		<result column="ResCode" property="resCode" jdbcType="VARCHAR" />
		<result column="ResName" property="resName" jdbcType="VARCHAR" />
		<result column="ResURL" property="resURL" jdbcType="VARCHAR" />
		<result column="Sequence" property="sequence" jdbcType="INTEGER" />
		<result column="Remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="UpdateUserID" property="updateUserID" jdbcType="INTEGER" />
		<result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="CreateUserID" property="createUserID" jdbcType="INTEGER" />
		<result column="IsDelete" property="isDelete" jdbcType="INTEGER" />
		<result column="Version" property="version" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Res_Column_List">
		S.ResID, S.ParentID, S.ResCode, S.ResName, S.ResURL, S.Sequence, S.Remarks, S.UpdateTime, S.UpdateUserID,
		S.CreateTime, S.CreateUserID, S.IsDelete, S.Version
	</sql>
	<select id="selectResList" parameterType="java.lang.Integer" resultMap="ResResultMap">
		select
		<include refid="Res_Column_List" />
		from security_resource S join security_role_resource R
		on S.ResID = R.ResID and S.IsDelete = 0 and R.IsDelete = 0 and R.RoleID = #{roleID,jdbcType=INTEGER}
	</select>

	<!-- 得到所有的角色 -->
	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from security_role R
		where R.IsDelete = 0
	</select>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from security_role
		where RoleID = #{roleID,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from security_role
		where RoleID = #{roleID,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.iidooo.core.model.po.SecurityRole">
		insert into security_role (RoleID, RoleCode, RoleName,
		Remarks, UpdateTime, UpdateUserID,
		CreateTime,
		CreateUserID, IsDelete,
		Version)
		values (#{roleID,jdbcType=INTEGER}, #{roleCode,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR},
		#{remarks,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUserID,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP},
		#{createUserID,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER},
		#{version,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.iidooo.core.model.po.SecurityRole">
		insert into security_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleID != null">
				RoleID,
			</if>
			<if test="roleCode != null">
				RoleCode,
			</if>
			<if test="roleName != null">
				RoleName,
			</if>
			<if test="remarks != null">
				Remarks,
			</if>
			<if test="updateTime != null">
				UpdateTime,
			</if>
			<if test="updateUserID != null">
				UpdateUserID,
			</if>
			<if test="createTime != null">
				CreateTime,
			</if>
			<if test="createUserID != null">
				CreateUserID,
			</if>
			<if test="isDelete != null">
				IsDelete,
			</if>
			<if test="version != null">
				Version,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleID != null">
				#{roleID,jdbcType=INTEGER},
			</if>
			<if test="roleCode != null">
				#{roleCode,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="remarks != null">
				#{remarks,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserID != null">
				#{updateUserID,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserID != null">
				#{createUserID,jdbcType=INTEGER},
			</if>
			<if test="isDelete != null">
				#{isDelete,jdbcType=INTEGER},
			</if>
			<if test="version != null">
				#{version,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.iidooo.core.model.po.SecurityRole">
		update security_role
		<set>
			<if test="roleCode != null">
				RoleCode = #{roleCode,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				RoleName = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="remarks != null">
				Remarks = #{remarks,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserID != null">
				UpdateUserID = #{updateUserID,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				CreateTime = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserID != null">
				CreateUserID = #{createUserID,jdbcType=INTEGER},
			</if>
			<if test="isDelete != null">
				IsDelete = #{isDelete,jdbcType=INTEGER},
			</if>
			<if test="version != null">
				Version = #{version,jdbcType=INTEGER},
			</if>
		</set>
		where RoleID = #{roleID,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.iidooo.core.model.po.SecurityRole">
		update security_role
		set RoleCode = #{roleCode,jdbcType=VARCHAR},
		RoleName =
		#{roleName,jdbcType=VARCHAR},
		Remarks = #{remarks,jdbcType=VARCHAR},
		UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
		UpdateUserID =
		#{updateUserID,jdbcType=INTEGER},
		CreateTime = #{createTime,jdbcType=TIMESTAMP},
		CreateUserID = #{createUserID,jdbcType=INTEGER},
		IsDelete =
		#{isDelete,jdbcType=INTEGER},
		Version = #{version,jdbcType=INTEGER}
		where RoleID = #{roleID,jdbcType=INTEGER}
	</update>
</mapper>