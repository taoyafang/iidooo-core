<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iidooo.core.mapper.SecurityClientMapper" >
  <resultMap id="BaseResultMap" type="com.iidooo.core.model.po.SecurityClient" >
    <id column="ClientID" property="clientID" jdbcType="INTEGER" />
    <result column="AppID" property="appID" jdbcType="VARCHAR" />
    <result column="Secret" property="secret" jdbcType="VARCHAR" />
    <result column="Remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UpdateUserID" property="updateUserID" jdbcType="INTEGER" />
    <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CreateUserID" property="createUserID" jdbcType="INTEGER" />
    <result column="IsDelete" property="isDelete" jdbcType="INTEGER" />
    <result column="Version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ClientID, AppID, Secret, Remarks, UpdateTime, UpdateUserID, CreateTime, CreateUserID, 
    IsDelete, Version
  </sql>
  
  <!-- 通过AppID和Secret查询注册客户端对象 -->
  <select id="selectByAppIDSecret" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
    from security_client
    where AppID = #{appID,jdbcType=VARCHAR} and Secret = #{secret,jdbcType=VARCHAR} and IsDelete = 0
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from security_client
    where ClientID = #{clientID,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.iidooo.core.model.po.SecurityClient" >
    insert into security_client (ClientID, AppID, Secret, 
      Remarks, UpdateTime, UpdateUserID, 
      CreateTime, CreateUserID, IsDelete, 
      Version)
    values (#{clientID,jdbcType=INTEGER}, #{appID,jdbcType=VARCHAR}, #{secret,jdbcType=VARCHAR}, 
      #{remarks,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUserID,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserID,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.iidooo.core.model.po.SecurityClient" >
    insert into security_client
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="clientID != null" >
        ClientID,
      </if>
      <if test="appID != null" >
        AppID,
      </if>
      <if test="secret != null" >
        Secret,
      </if>
      <if test="remarks != null" >
        Remarks,
      </if>
      <if test="updateTime != null" >
        UpdateTime,
      </if>
      <if test="updateUserID != null" >
        UpdateUserID,
      </if>
      <if test="createTime != null" >
        CreateTime,
      </if>
      <if test="createUserID != null" >
        CreateUserID,
      </if>
      <if test="isDelete != null" >
        IsDelete,
      </if>
      <if test="version != null" >
        Version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="clientID != null" >
        #{clientID,jdbcType=INTEGER},
      </if>
      <if test="appID != null" >
        #{appID,jdbcType=VARCHAR},
      </if>
      <if test="secret != null" >
        #{secret,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserID != null" >
        #{updateUserID,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserID != null" >
        #{createUserID,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.iidooo.core.model.po.SecurityClient" >
    update security_client
    <set >
      <if test="appID != null" >
        AppID = #{appID,jdbcType=VARCHAR},
      </if>
      <if test="secret != null" >
        Secret = #{secret,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        Remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserID != null" >
        UpdateUserID = #{updateUserID,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserID != null" >
        CreateUserID = #{createUserID,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        IsDelete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        Version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where ClientID = #{clientID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iidooo.core.model.po.SecurityClient" >
    update security_client
    set AppID = #{appID,jdbcType=VARCHAR},
      Secret = #{secret,jdbcType=VARCHAR},
      Remarks = #{remarks,jdbcType=VARCHAR},
      UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      UpdateUserID = #{updateUserID,jdbcType=INTEGER},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      CreateUserID = #{createUserID,jdbcType=INTEGER},
      IsDelete = #{isDelete,jdbcType=INTEGER},
      Version = #{version,jdbcType=INTEGER}
    where ClientID = #{clientID,jdbcType=INTEGER}
  </update>
</mapper>