<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iidooo.core.mapper.SecurityResourceMapper" >
  <resultMap id="BaseResultMap" type="com.iidooo.core.model.po.SecurityResource" >
    <id column="ResID" property="resID" jdbcType="INTEGER" />
    <result column="ParentID" property="parentID" jdbcType="INTEGER" />
    <result column="ResName" property="resName" jdbcType="VARCHAR" />
    <result column="ResURL" property="resURL" jdbcType="VARCHAR" />
    <result column="Sequence" property="sequence" jdbcType="INTEGER" />
    <result column="Remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UpdateUserID" property="updateUserID" jdbcType="INTEGER" />
    <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CreateUserID" property="createUserID" jdbcType="INTEGER" />
    <result column="IsDelete" property="isDelete" jdbcType="INTEGER" />
    <result column="Version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ResID, ParentID, ResName, ResURL, Sequence, Remarks, UpdateTime, UpdateUserID, CreateTime, 
    CreateUserID, IsDelete, Version
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from SECURITY_RESOURCE
    where ResID = #{resID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from SECURITY_RESOURCE
    where ResID = #{resID,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.iidooo.core.model.po.SecurityResource" >
    insert into SECURITY_RESOURCE (ResID, ParentID, ResName, 
      ResURL, Sequence, Remarks, 
      UpdateTime, UpdateUserID, CreateTime, 
      CreateUserID, IsDelete, Version
      )
    values (#{resID,jdbcType=INTEGER}, #{parentID,jdbcType=INTEGER}, #{resName,jdbcType=VARCHAR}, 
      #{resURL,jdbcType=VARCHAR}, #{sequence,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUserID,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserID,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.iidooo.core.model.po.SecurityResource" >
    insert into SECURITY_RESOURCE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="resID != null" >
        ResID,
      </if>
      <if test="parentID != null" >
        ParentID,
      </if>
      <if test="resName != null" >
        ResName,
      </if>
      <if test="resURL != null" >
        ResURL,
      </if>
      <if test="sequence != null" >
        Sequence,
      </if>
      <if test="remarks != null" >
        Remarks,
      </if>
      <if test="updateTime != null" >
        UpdateTime,
      </if>
      <if test="updateUserID != null" >
        UpdateUserID,
      </if>
      <if test="createTime != null" >
        CreateTime,
      </if>
      <if test="createUserID != null" >
        CreateUserID,
      </if>
      <if test="isDelete != null" >
        IsDelete,
      </if>
      <if test="version != null" >
        Version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="resID != null" >
        #{resID,jdbcType=INTEGER},
      </if>
      <if test="parentID != null" >
        #{parentID,jdbcType=INTEGER},
      </if>
      <if test="resName != null" >
        #{resName,jdbcType=VARCHAR},
      </if>
      <if test="resURL != null" >
        #{resURL,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null" >
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserID != null" >
        #{updateUserID,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserID != null" >
        #{createUserID,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.iidooo.core.model.po.SecurityResource" >
    update SECURITY_RESOURCE
    <set >
      <if test="parentID != null" >
        ParentID = #{parentID,jdbcType=INTEGER},
      </if>
      <if test="resName != null" >
        ResName = #{resName,jdbcType=VARCHAR},
      </if>
      <if test="resURL != null" >
        ResURL = #{resURL,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null" >
        Sequence = #{sequence,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        Remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserID != null" >
        UpdateUserID = #{updateUserID,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserID != null" >
        CreateUserID = #{createUserID,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        IsDelete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        Version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where ResID = #{resID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iidooo.core.model.po.SecurityResource" >
    update SECURITY_RESOURCE
    set ParentID = #{parentID,jdbcType=INTEGER},
      ResName = #{resName,jdbcType=VARCHAR},
      ResURL = #{resURL,jdbcType=VARCHAR},
      Sequence = #{sequence,jdbcType=INTEGER},
      Remarks = #{remarks,jdbcType=VARCHAR},
      UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      UpdateUserID = #{updateUserID,jdbcType=INTEGER},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      CreateUserID = #{createUserID,jdbcType=INTEGER},
      IsDelete = #{isDelete,jdbcType=INTEGER},
      Version = #{version,jdbcType=INTEGER}
    where ResID = #{resID,jdbcType=INTEGER}
  </update>
</mapper>